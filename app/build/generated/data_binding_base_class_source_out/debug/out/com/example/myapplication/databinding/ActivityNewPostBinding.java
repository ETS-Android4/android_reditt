// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.design.widget.TextInputEditText;
import android.support.design.widget.TextInputLayout;
import android.support.v7.widget.CardView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.TextView;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextInputEditText contentpost;

  @NonNull
  public final Button createPost;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextInputEditText titlePost;

  private ActivityNewPostBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull TextInputEditText contentpost, @NonNull Button createPost,
      @NonNull TextInputLayout textInputLayout2, @NonNull TextView textView3,
      @NonNull TextInputEditText titlePost) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.contentpost = contentpost;
    this.createPost = createPost;
    this.textInputLayout2 = textInputLayout2;
    this.textView3 = textView3;
    this.titlePost = titlePost;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.contentpost;
      TextInputEditText contentpost = ViewBindings.findChildViewById(rootView, id);
      if (contentpost == null) {
        break missingId;
      }

      id = R.id.createPost;
      Button createPost = ViewBindings.findChildViewById(rootView, id);
      if (createPost == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.titlePost;
      TextInputEditText titlePost = ViewBindings.findChildViewById(rootView, id);
      if (titlePost == null) {
        break missingId;
      }

      return new ActivityNewPostBinding((ConstraintLayout) rootView, cardView, contentpost,
          createPost, textInputLayout2, textView3, titlePost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
